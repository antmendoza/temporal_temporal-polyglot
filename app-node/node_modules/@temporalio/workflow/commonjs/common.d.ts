import { coresdk } from '@temporalio/proto';
export declare function errorToUserCodeFailure(err: unknown, nonRetryable?: boolean): coresdk.common.IUserCodeFailure;
/**
 * Helper for creating promises which can be manually resolved
 */
export declare class ResolvablePromise<T> implements PromiseLike<T> {
    readonly then: <TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null) => PromiseLike<TResult1 | TResult2>;
    readonly resolve: (value: T | PromiseLike<T>) => void;
    readonly reject: (reason?: any) => void;
    constructor();
}
