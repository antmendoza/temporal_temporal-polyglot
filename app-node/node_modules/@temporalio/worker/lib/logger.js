"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultLogger = void 0;
const severities = ['DEBUG', 'INFO', 'WARNING', 'ERROR'];
/**
 * Log messages using `console.error` and basic formatting
 */
function defaultLogFunction(level, message, meta) {
    if (meta === undefined) {
        console.error(new Date(), `[${level}]`, message);
    }
    else {
        console.error(new Date(), `[${level}]`, message, meta);
    }
}
/**
 * Default worker logger - uses a default log function to log messages to `console.error`.
 * See constructor arguments for customization.
 */
class DefaultLogger {
    constructor(level = 'INFO', logFunction = defaultLogFunction) {
        this.level = level;
        this.logFunction = logFunction;
        this.severity = severities.indexOf(this.level);
    }
    log(level, message, meta) {
        if (severities.indexOf(level) >= this.severity) {
            this.logFunction(level, message, meta);
        }
    }
    debug(message, meta) {
        this.log('DEBUG', message, meta);
    }
    info(message, meta) {
        this.log('INFO', message, meta);
    }
    warn(message, meta) {
        this.log('WARNING', message, meta);
    }
    error(message, meta) {
        this.log('ERROR', message, meta);
    }
}
exports.DefaultLogger = DefaultLogger;
